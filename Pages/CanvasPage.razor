@inject MouseService mouseSrv;
@page "/canvas"
@using System.Runtime.Intrinsics.Arm


<div class="row g-3 align-items-center">
    <div class="col-auto">
        <label class="col-form-label">Solar system position:</label>
    </div>
    <div class="col-auto">
        <input type="number" class="form-control" @bind=X/>
    </div>
    <div class="col-auto">
        <input type="number" @bind=Y class="form-control"/>
    </div>
</div>

<MudButton OnClick="@Add">Add</MudButton>
<div class="row mt-2">
    <div class="col">
        <svg class="bg-light" width="@canvasWidth" height="@canvasHeigth" xmlns="http://www.w3.org/2000/svg"
             @onmousemove=@(e => mouseSrv.FireMove(this, e))
             @onmouseup=@(e => mouseSrv.FireUp(this, e))>

            @foreach (var draggabble in _components)
            {
                @draggabble
            }
        </svg>
    </div>
</div>

@code {

    [Parameter]
    public RenderFragment RenderFragment { get; set; }

    static double X = 290;
    static double Y = 250;
    static int width = 20;
    static int height = 20;
    private string canvasWidth { get; set; } = "1200";
    public string canvasHeigth { get; set; } = "500";

    readonly List<RenderFragment> _components = new()
    {
        Obstacles
    };

    static RenderFragment Obstacles = __builder =>
    {
        <Draggable X="@X" Y="Y">
            <Obstacle height="height" width="width"/>
        </Draggable>
    };

    private void Add()
    {
    //TODO AddObstacle Dialog returns x,y,width,height
        _components.Add(Obstacles);
        StateHasChanged();
    }




}